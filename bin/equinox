#!/usr/bin/env node

var yargs = require('yargs')
    .usage('Equinox.\nUsage: $0')
    .demand('database')
    .alias('d', 'database')
    .describe('database', 'Database to run in')
    .default('host', 'localhost')
    .alias('h', 'host')
    .describe('host', 'Hostname')
    .alias('u', 'user')
    .describe('user', 'User')
    .alias('p', 'password')
    .describe('password', 'Password')
    .array('files')
    .describe('files', 'Files to load and execute')
    .describe('reporter', 'Test reporter')
    .alias('r', 'reporter')
    .default('reporter', 'dot')
    ;

var argv = yargs.argv;
var db = require(__dirname + '/../lib/db');
var loader = require(__dirname + '/../lib/loader');
var runner = require('../lib/runners/async').runner;
var dot = require('../lib/reporters/dot').reporter;
var spec = require('../lib/reporters/spec').reporter;

var reporter = argv.reporter === 'spec' ? spec : dot;

var fs = require('fs');

if (argv.database === true) {
  yargs.showHelp();
  process.exit(0);
}

var files = [ ];

// read any file arguments
if (argv.files) {
  files = files.concat(argv.files);
}

// try to connect to the database
db.connect (argv.database, argv.host, argv.user, argv.password, function (err) {
  if (err) {
    console.log("ERROR: Unable to connect to database (" + err.toString() + ")");
    return;
  }

  db.query('CREATE SCHEMA IF NOT EXISTS equinox', function (err) {
    if (err) {
      console.log("ERROR: " + err);
      process.exit(1);
    }

    loader.load(files, function (err) {
      if (err) {
        console.log("ERROR: " + err);
        process.exit(1);
      }

      // execute tests here
      runner(files, function (err, results) {
        reporter(results);

        // drop the schema`
        db.query('DROP SCHEMA equinox CASCADE', function (err, res) {
          if (err) {
            console.log("ERROR: " + err);
            process.exit(1);
          }

          process.exit(0);
        });
      });
    });
  });
});
